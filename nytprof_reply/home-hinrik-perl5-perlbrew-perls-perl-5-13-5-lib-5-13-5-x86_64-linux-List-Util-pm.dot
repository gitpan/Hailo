digraph {
graph [overlap=false]
subgraph cluster_List_Util {
	label="List::Util";
	"List::Util::shuffle";
	"List::Util::BEGIN@11";
	"List::Util::first";
	"List::Util::BEGIN@12";
	"List::Util::min";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_Data_OptList {
	label="Data::OptList";
	"Data::OptList::__is_a";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_Tie_RefHash {
	label="Tie::RefHash";
	"Tie::RefHash::BEGIN@96";
}
subgraph cluster_Hailo {
	label="Hailo";
	"Hailo::CORE:match";
	"Hailo::_new_class";
	"Hailo::CORE:regcomp";
}
subgraph cluster_Hailo_Engine_Default {
	label="Hailo::Engine::Default";
	"Hailo::Engine::Default::__ANON__[Hailo/Engine/Default.pm:24]";
	"Hailo::Engine::Default::reply";
}
"Hailo::Engine::Default::__ANON__[Hailo/Engine/Default.pm:24]" -> "List::Util::min";
"List::Util::first" -> "Hailo::CORE:regcomp";
"List::Util::first" -> "Data::OptList::__is_a";
"Tie::RefHash::BEGIN@96" -> "List::Util::BEGIN@12";
"Tie::RefHash::BEGIN@96" -> "List::Util::BEGIN@11";
"List::Util::first" -> "Hailo::CORE:match";
"Hailo::Engine::Default::reply" -> "List::Util::shuffle";
"List::Util::BEGIN@12" -> "vars::import";
"Hailo::_new_class" -> "List::Util::first";
"Data::OptList::__is_a" -> "List::Util::first";
"List::Util::BEGIN@11" -> "strict::import";
}
